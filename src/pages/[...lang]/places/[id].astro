---
import { getCollection } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
import Map from '../../../components/Map.astro';
import type { Place } from '../../../types/place';
import { useTranslations } from '../../../i18n/utils';

export async function getStaticPaths() {
  const places = await getCollection('places');
  return ['en', 'fr'].flatMap(lang => 
    places.map((place: Place) => ({
      params: { 
        lang,
        id: place.id.replace('.md', '')
      },
      props: { place, allPlaces: places }
    }))
  );
}

const { lang } = Astro.params;
const { place, allPlaces }: { place: Place; allPlaces: Place[] } = Astro.props;
const { Content } = await place.render();
const t = useTranslations(lang);
---

<Layout title={place.data.name} showPlacesSidebar={true}>
  <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
    <div id="places-sidebar" class="fixed inset-0 top-[73px] z-[1000] bg-white transform -translate-x-full transition-transform duration-300 ease-in-out md:static md:transform-none md:col-span-1 md:top-0 md:z-auto">
      <div class="p-4 overflow-y-auto max-h-[calc(100vh-73px)] md:max-h-none">
        <ul class="space-y-2">
          {allPlaces.map(p => (
            <li>
              <a 
                href={`/${lang}/places/${p.id.replace('.md', '')}`}
                class={`block p-3 rounded-md transition-colors ${
                  p.id === place.id 
                    ? 'bg-blue-50' 
                    : 'hover:bg-gray-50'
                }`}
              >
                {p.data.name}
                <div class="text-sm text-gray-500">
                  {p.data.latitude}, {p.data.longitude}
                </div>
              </a>
            </li>
          ))}
        </ul>
      </div>
    </div>
    <div class="md:col-span-2">
      <header class="mb-6">
        <h1 class="text-2xl font-bold mb-2">{place.data.name}</h1>
        <p class="text-gray-600">{t('location')}: {place.data.latitude}, {place.data.longitude}</p>
      </header>
      <div class="h-[400px] mb-8">
        <Map 
          places={allPlaces.map(p => ({ 
            id: parseInt(p.id), 
            name: p.data.name, 
            latitude: p.data.latitude, 
            longitude: p.data.longitude 
          }))}
          selectedId={parseInt(place.id)}
          lang={lang}
        />
      </div>
      <article>
        <Content />
      </article>
    </div>
  </div>
</Layout> 